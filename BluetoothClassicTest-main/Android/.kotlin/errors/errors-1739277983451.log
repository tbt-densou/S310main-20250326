kotlin version: 2.1.0
error message: org.jetbrains.kotlin.backend.common.BackendException: Backend Internal error: Exception during IR lowering
File being compiled: C:/Users/norah/Downloads/appNaw/BluetoothClassicTest-main/Android/app/src/main/java/com/apppppp/bluetoothclassictest/navigation/NavigationGraph.kt
The root cause java.lang.RuntimeException was thrown at: org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:48)
	at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException(CodegenUtil.kt:253)
	at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException$default(CodegenUtil.kt:236)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:55)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:42)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:28)
	at org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:166)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:27)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:14)
	at org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:166)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.CompilerPhaseKt.invokeToplevel(CompilerPhase.kt:62)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.invokeCodegen(JvmIrCodegenFactory.kt:371)
	at org.jetbrains.kotlin.codegen.CodegenFactory.generateModule(CodegenFactory.kt:47)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.generateModuleInFrontendIRMode(JvmIrCodegenFactory.kt:433)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.generateCodeFromIr(jvmCompilerPipeline.kt:192)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.runBackend(jvmCompilerPipeline.kt:80)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineLightTreeKt.compileModule(jvmCompilerPipelineLightTree.kt:264)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineLightTreeKt.compileSingleModuleUsingFrontendIrAndLightTree(jvmCompilerPipelineLightTree.kt:231)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineLightTreeKt.compileModulesUsingFrontendIrAndLightTree(jvmCompilerPipelineLightTree.kt:86)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:146)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:43)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:102)
	at org.jetbrains.kotlin.cli.common.CLICompiler.exec(CLICompiler.kt:316)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:464)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:73)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.doCompile(IncrementalCompilerRunner.kt:506)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileImpl(IncrementalCompilerRunner.kt:423)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileNonIncrementally(IncrementalCompilerRunner.kt:301)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compile(IncrementalCompilerRunner.kt:129)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.execIncrementalCompiler(CompileServiceImpl.kt:674)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.access$execIncrementalCompiler(CompileServiceImpl.kt:91)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.compile(CompileServiceImpl.kt:1659)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: java.lang.RuntimeException: Exception while generating code for:
FUN name:NavigationGraph visibility:public modality:FINAL <> (navController:androidx.navigation.NavHostController, deviceViewModel:com.apppppp.bluetoothclassictest.viewmodel.DeviceViewModel, openBluetoothSettings:kotlin.Function0<kotlin.Unit>) returnType:kotlin.Unit
  annotations:
    Composable
  VALUE_PARAMETER name:navController index:0 type:androidx.navigation.NavHostController
  VALUE_PARAMETER name:deviceViewModel index:1 type:com.apppppp.bluetoothclassictest.viewmodel.DeviceViewModel
  VALUE_PARAMETER name:openBluetoothSettings index:2 type:kotlin.Function0<kotlin.Unit>
  BLOCK_BODY
    VAR name:deviceViewModel type:com.apppppp.bluetoothclassictest.viewmodel.DeviceViewModel [val]
      TYPE_OP type=com.apppppp.bluetoothclassictest.viewmodel.DeviceViewModel origin=IMPLICIT_CAST typeOperand=com.apppppp.bluetoothclassictest.viewmodel.DeviceViewModel
        CALL 'public final fun viewModel$default <VM> (viewModelStoreOwner: androidx.lifecycle.ViewModelStoreOwner?, key: kotlin.String?, factory: androidx.lifecycle.ViewModelProvider.Factory?, extras: androidx.lifecycle.viewmodel.CreationExtras?, $mask0: kotlin.Int, $handler: kotlin.Any?): VM of androidx.lifecycle.viewmodel.compose.ViewModelKt.viewModel$default [inline] declared in androidx.lifecycle.viewmodel.compose.ViewModelKt' type=VM of androidx.lifecycle.viewmodel.compose.ViewModelKt.viewModel$default origin=DEFAULT_DISPATCH_CALL
          <VM>: com.apppppp.bluetoothclassictest.viewmodel.DeviceViewModel
          viewModelStoreOwner: COMPOSITE type=androidx.lifecycle.ViewModelStoreOwner? origin=DEFAULT_VALUE
            CONST Null type=androidx.lifecycle.ViewModelStoreOwner? value=null
          key: COMPOSITE type=kotlin.String? origin=DEFAULT_VALUE
            CONST Null type=kotlin.String? value=null
          factory: COMPOSITE type=androidx.lifecycle.ViewModelProvider.Factory? origin=DEFAULT_VALUE
            CONST Null type=androidx.lifecycle.ViewModelProvider.Factory? value=null
          extras: COMPOSITE type=androidx.lifecycle.viewmodel.CreationExtras? origin=DEFAULT_VALUE
            CONST Null type=androidx.lifecycle.viewmodel.CreationExtras? value=null
          $mask0: CONST Int type=kotlin.Int value=15
          $handler: CONST Null type=kotlin.Any? value=null
    CALL 'public final fun NavHost$default (navController: androidx.navigation.NavHostController, startDestination: kotlin.String, modifier: androidx.compose.ui.Modifier?, route: kotlin.String?, builder: @[ExtensionFunctionType] kotlin.Function1<androidx.navigation.NavGraphBuilder, kotlin.Unit>, $mask0: kotlin.Int, $handler: kotlin.Any?): kotlin.Unit declared in androidx.navigation.compose.NavHostKt' type=kotlin.Unit origin=DEFAULT_DISPATCH_CALL
      navController: GET_VAR 'navController: androidx.navigation.NavHostController declared in com.apppppp.bluetoothclassictest.navigation.NavigationGraphKt.NavigationGraph' type=androidx.navigation.NavHostController origin=null
      startDestination: CONST String type=kotlin.String value="main"
      modifier: COMPOSITE type=androidx.compose.ui.Modifier? origin=DEFAULT_VALUE
        CONST Null type=androidx.compose.ui.Modifier? value=null
      route: COMPOSITE type=kotlin.String? origin=DEFAULT_VALUE
        CONST Null type=kotlin.String? value=null
      builder: BLOCK type=@[ExtensionFunctionType] kotlin.Function1<androidx.navigation.NavGraphBuilder, kotlin.Unit> origin=LAMBDA
        COMPOSITE type=kotlin.Unit origin=null
        CALL 'public final fun <jvm-indy> <T> (dynamicCall: T of kotlin.jvm.internal.<jvm-indy>, bootstrapMethodHandle: kotlin.Any, vararg bootstrapMethodArguments: kotlin.Any): T of kotlin.jvm.internal.<jvm-indy> declared in kotlin.jvm.internal' type=@[ExtensionFunctionType] kotlin.Function1<androidx.navigation.NavGraphBuilder, kotlin.Unit> origin=null
          <T>: @[ExtensionFunctionType] kotlin.Function1<androidx.navigation.NavGraphBuilder, kotlin.Unit>
          dynamicCall: CALL 'public final fun invoke (p0: androidx.navigation.NavHostController, p1: com.apppppp.bluetoothclassictest.viewmodel.DeviceViewModel): @[ExtensionFunctionType] kotlin.Function1<androidx.navigation.NavGraphBuilder, kotlin.Unit> declared in kotlin.jvm.internal.invokeDynamic' type=@[ExtensionFunctionType] kotlin.Function1<androidx.navigation.NavGraphBuilder, kotlin.Unit> origin=null
            p0: GET_VAR 'navController: androidx.navigation.NavHostController declared in com.apppppp.bluetoothclassictest.navigation.NavigationGraphKt.NavigationGraph' type=androidx.navigation.NavHostController origin=null
            p1: GET_VAR 'val deviceViewModel: com.apppppp.bluetoothclassictest.viewmodel.DeviceViewModel [val] declared in com.apppppp.bluetoothclassictest.navigation.NavigationGraphKt.NavigationGraph' type=com.apppppp.bluetoothclassictest.viewmodel.DeviceViewModel origin=null
          bootstrapMethodHandle: CALL 'public final fun <jvm-method-handle> (tag: kotlin.Int, owner: kotlin.String, name: kotlin.String, descriptor: kotlin.String, isInterface: kotlin.Boolean): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
            tag: CONST Int type=kotlin.Int value=6
            owner: CONST String type=kotlin.String value="java/lang/invoke/LambdaMetafactory"
            name: CONST String type=kotlin.String value="metafactory"
            descriptor: CONST String type=kotlin.String value="(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;"
            isInterface: CONST Boolean type=kotlin.Boolean value=false
          bootstrapMethodArguments: VARARG type=kotlin.Array<kotlin.Any> varargElementType=kotlin.Any
            CALL 'public final fun <jvm-original-method-type> (method: kotlin.Any): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
              method: RAW_FUNCTION_REFERENCE 'public abstract fun invoke (p1: P1 of kotlin.Function1): R of kotlin.Function1 [operator] declared in kotlin.Function1' type=kotlin.Any
            RAW_FUNCTION_REFERENCE 'private final fun NavigationGraph$lambda$2 ($navController: androidx.navigation.NavHostController, $deviceViewModel: com.apppppp.bluetoothclassictest.viewmodel.DeviceViewModel, $this$NavHost: androidx.navigation.NavGraphBuilder): kotlin.Unit? declared in com.apppppp.bluetoothclassictest.navigation.NavigationGraphKt' type=kotlin.Any
            CALL 'public final fun <jvm-original-method-type> (method: kotlin.Any): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
              method: RAW_FUNCTION_REFERENCE 'public abstract fun invoke (p1: androidx.navigation.NavGraphBuilder): kotlin.Unit? [fake_override,operator] declared in kotlin.jvm.internal.invokeDynamic.<fake>' type=kotlin.Any
      $mask0: CONST Int type=kotlin.Int value=12
      $handler: CONST Null type=kotlin.Any? value=null

	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:48)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate$default(FunctionCodegen.kt:41)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethodNode(ClassCodegen.kt:407)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethod(ClassCodegen.kt:424)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generate(ClassCodegen.kt:169)
	at org.jetbrains.kotlin.backend.jvm.FileCodegen.lower(JvmPhases.kt:39)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseFactoriesKt.createFilePhase$lambda$4(PhaseFactories.kt:71)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseBuildersKt$createSimpleNamedCompilerPhase$1.phaseBody(PhaseBuilders.kt:69)
	at org.jetbrains.kotlin.backend.common.phaser.SimpleNamedCompilerPhase.phaseBody(CompilerPhase.kt:226)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:52)
	... 45 more
Caused by: org.jetbrains.kotlin.codegen.CompilationException: Back-end (JVM) Internal error: Couldn't inline method call: CALL 'public final fun viewModel$default <VM> (viewModelStoreOwner: androidx.lifecycle.ViewModelStoreOwner?, key: kotlin.String?, factory: androidx.lifecycle.ViewModelProvider.Factory?, extras: androidx.lifecycle.viewmodel.CreationExtras?, $mask0: kotlin.Int, $handler: kotlin.Any?): VM of androidx.lifecycle.viewmodel.compose.ViewModelKt.viewModel$default [inline] declared in androidx.lifecycle.viewmodel.compose.ViewModelKt' type=VM of androidx.lifecycle.viewmodel.compose.ViewModelKt.viewModel$default origin=DEFAULT_DISPATCH_CALL
Method: null
File is unknown
The root cause java.lang.IllegalStateException was thrown at: org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.getMethodNode(SourceCompilerForInline.kt:118)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.performInline(InlineCodegen.kt:65)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCodegen.genInlineCall(IrInlineCodegen.kt:163)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCallGenerator.genCall(IrInlineCallGenerator.kt:36)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:598)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:134)
	at org.jetbrains.kotlin.ir.expressions.IrCall.accept(IrCall.kt:24)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitTypeOperator(ExpressionCodegen.kt:1076)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitTypeOperator(ExpressionCodegen.kt:134)
	at org.jetbrains.kotlin.ir.expressions.IrTypeOperatorCall.accept(IrTypeOperatorCall.kt:26)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitVariable(ExpressionCodegen.kt:735)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitVariable(ExpressionCodegen.kt:134)
	at org.jetbrains.kotlin.ir.declarations.IrVariable.accept(IrVariable.kt:36)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitStatementContainer(ExpressionCodegen.kt:524)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:529)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:134)
	at org.jetbrains.kotlin.ir.expressions.IrBlockBody.accept(IrBlockBody.kt:20)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.generate(ExpressionCodegen.kt:236)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.doGenerate(FunctionCodegen.kt:124)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:45)
	... 55 more
Caused by: java.lang.IllegalStateException: couldn't find inline method Landroidx/lifecycle/viewmodel/compose/ViewModelKt;.viewModel$default(Landroidx/lifecycle/ViewModelStoreOwner;Ljava/lang/String;Landroidx/lifecycle/ViewModelProvider$Factory;Landroidx/lifecycle/viewmodel/CreationExtras;ILjava/lang/Object;)Landroidx/lifecycle/ViewModel;
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.getMethodNode(SourceCompilerForInline.kt:118)
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.loadCompiledInlineFunction(SourceCompilerForInline.kt:96)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrSourceCompilerForInline.compileInlineFunction(IrSourceCompilerForInline.kt:91)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.compileInline(InlineCodegen.kt:43)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.performInline(InlineCodegen.kt:51)
	... 73 more


